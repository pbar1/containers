replicaCount: 1

image:
  repository: linuxserver/transmission
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

transmission:
  webHome: /kettu/
  user: transmission
  pass: transmission
  port: 9091
  torrentPort: 51413
  proxyPort: 8388
  puid: 1000
  pgid: 1000
  tz: Etc/UTC
  config:
    hostPath: /config/transmission
  downloads:
    hostPath: /downloads

privateInternetAccess:
  image:
    name: qmcgaw/private-internet-access
    tag: v2
    pullPolicy: IfNotPresent
  tz: Etc/UTC
  region: Switzerland
  # name of a kubernetes secret containing keys "user" and "password"
  credentialsSecret: ""
  extraSubnets: "0.0.0.0/32"
  tinyProxy: "off"
  shadowSocks: "on"
  shadowSocksPassword: shadowsocks
  shadowSocksPort: 8388
