#!/usr/bin/env python3

from typing import List


# https://github.com/hotio/radarr/blob/nightly/linux-amd64.Dockerfile
def gen_arr_dockerfile(
    app: str,
    tag: str = "nightly",
    repo: str = "ghcr.io/hotio",
    base_image: str = "alpine:latest",
    extra_apks: List[str] = [],
) -> str:
    apks = ["libintl", "sqlite-libs", "icu-libs"]
    apks.extend(extra_apks)

    return f"""
FROM {repo}/{app}:{tag} AS app
FROM {base_image}

RUN apk add --no-cache {" ".join(apks)}

RUN adduser -D -s /sbin/nologin -G users -u 1000 user && mkdir /config && chown -R user:users /config
USER user

COPY --from=app --chown=user:users /app/bin /app

ENTRYPOINT ["/app/{app.capitalize()}"]
CMD ["-nobrowser", "-data=/config"]

LABEL org.opencontainers.image.source https://github.com/pbar1/containers
""".strip()


def main():
    # Generate the individual apps
    apps = {
        "lidarr": ["chromaprint"],
        "prowlarr": [],
        "radarr": ["ffmpeg", "python3"],
        "readarr": [],
        "sonarr": ["ffmpeg", "python3"],
    }
    for app, extra_apks in apps.items():
        dockerfile = f"{app}.Dockerfile"
        with open(dockerfile, "w+") as f:
            f.write(gen_arr_dockerfile(app=app, extra_apks=extra_apks))


if __name__ == "__main__":
    main()
